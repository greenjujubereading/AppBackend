<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qingzaoreading.dao.UserLoginLogMapper" >
  <resultMap id="BaseResultMap" type="com.qingzaoreading.pojo.po.UserLoginLog" >
    <id column="user_login_log_id" property="userLoginLogId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="operation_type" property="operationType" jdbcType="VARCHAR" />
    <result column="phone_model" property="phoneModel" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_login_log_id, user_id, login_time, operation_type, phone_model
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qingzaoreading.pojo.po.UserLoginLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_login_log
    where user_login_log_id = #{userLoginLogId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_login_log
    where user_login_log_id = #{userLoginLogId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qingzaoreading.pojo.po.UserLoginLogExample" >
    delete from user_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qingzaoreading.pojo.po.UserLoginLog" >
    insert into user_login_log (user_login_log_id, user_id, login_time, 
      operation_type, phone_model)
    values (#{userLoginLogId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{operationType,jdbcType=VARCHAR}, #{phoneModel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qingzaoreading.pojo.po.UserLoginLog" >
    insert into user_login_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userLoginLogId != null" >
        user_login_log_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="operationType != null" >
        operation_type,
      </if>
      <if test="phoneModel != null" >
        phone_model,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userLoginLogId != null" >
        #{userLoginLogId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationType != null" >
        #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="phoneModel != null" >
        #{phoneModel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qingzaoreading.pojo.po.UserLoginLogExample" resultType="java.lang.Integer" >
    select count(*) from user_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_login_log
    <set >
      <if test="record.userLoginLogId != null" >
        user_login_log_id = #{record.userLoginLogId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operationType != null" >
        operation_type = #{record.operationType,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneModel != null" >
        phone_model = #{record.phoneModel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_login_log
    set user_login_log_id = #{record.userLoginLogId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      operation_type = #{record.operationType,jdbcType=VARCHAR},
      phone_model = #{record.phoneModel,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qingzaoreading.pojo.po.UserLoginLog" >
    update user_login_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationType != null" >
        operation_type = #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="phoneModel != null" >
        phone_model = #{phoneModel,jdbcType=VARCHAR},
      </if>
    </set>
    where user_login_log_id = #{userLoginLogId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qingzaoreading.pojo.po.UserLoginLog" >
    update user_login_log
    set user_id = #{userId,jdbcType=BIGINT},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      operation_type = #{operationType,jdbcType=VARCHAR},
      phone_model = #{phoneModel,jdbcType=VARCHAR}
    where user_login_log_id = #{userLoginLogId,jdbcType=BIGINT}
  </update>
</mapper>